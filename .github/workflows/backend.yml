name: Backend

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
        
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    outputs:
      shaShort: ${{ steps.revParse.outputs.shaShort }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Get Commit SHA
        id: revParse
        run: echo "shaShort=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Docker - Build
        run: docker buildx build --platform linux/amd64 --tag ${{ secrets.ECR_REPO_URL }}:${{ steps.revParse.outputs.shaShort }} --tag api:${{ steps.revParse.outputs.shaShort }} --load ./backend 

      - name: Snyk - Test Image
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: "${{ secrets.ECR_REPO_URL }}:${{ steps.revParse.outputs.shaShort }}"
          args: --severity-threshold=high 

      - name: Upload image
        uses: ishworkh/container-image-artifact-upload@v2.0.0
        with:
          image: "api:${{ steps.revParse.outputs.shaShort }}"
      
      #  temporarily disabled to avoid pushing to ECR 
      # these steps should be moved to happen after successful smoke test
      # - name: Get AWS Creds
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.ROLEARN }}
      #     role-duration-seconds: 900
      #     aws-region: us-east-1
      
      # - name: Docker - Login
      #   run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URL }}
  
      # - name: Docker - Push
      #   run: docker push ${{ secrets.ECR_REPO_URL }}:${{ steps.revParse.outputs.shaShort }}
        
      # - name: Update Parameter
      #   run: aws ssm put-parameter --name ${{ secrets.PARAMETER_NAME }} --value ${{ steps.revParse.outputs.shaShort }} --overwrite

      # Deployment of the latest image will happen with terraform apply during infrastructure deploy
  
  test:
    name: Smoke Test
    needs: build
    runs-on: ubuntu-latest
    # environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download image
        uses: ishworkh/container-image-artifact-download@v2.0.0
        with:
          image: "api:${{ needs.build.outputs.shaShort }}"
      
      - name: Start API and Postgres
        uses: hoverkraft-tech/compose-action@v2.0.2
        with:
          compose-file: ./backend/actions-compose.yml
        env:
          API_IMAGE_URI: "api:${{ needs.build.outputs.shaShort }}"
          
          # for postgre container
          POSTGRES_DB: ztmf
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: localDev

          # for api container and debug launch config
          PORT: 8080
          DB_ENDPOINT: 127.0.0.1
          DB_PORT: 5432
          DB_NAME: ztmf
          DB_USER: admin
          DB_PASS: localDev 
          AUTH_HS256_SECRET: "zeroTrust"
          AUTH_HEADER_FIELD: "Authorization"

      
      - name: Curl
        run: |
          auth="eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InNvbWVAb25lLmNvbSJ9.IrtPdDCxmm9Jo6-860zvUeCZGKTTzZCCKx8lNNfymjs"
          curl -H "Authorization: ${auth}" http://127.0.0.1:8080/api/v1/users/current
